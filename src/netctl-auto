#! /bin/bash

if (( "$#" != 2 )) || [[ $1 != @(start|stop) ]]; then
   report error "Usage: netctl-auto [start|stop] <interface>"
fi

. /usr/lib/network/globals
. "$subr_dir/wpa"
. "$subr_dir/rfkill"

startstop="$1"
interface="$2"
pidfile="$state_dir/wpa_actiond_$interface.pid"
shift 2
action_script=$subr_dir/auto.action
actiond_args=(-p /run/wpa_supplicant -i "$interface" -P "$pidfile" -a "$action_script")

case "$startstop" in
  start)
    if wpa_is_active "$interface"; then
        report error "The interface ($interface) is already in use"
    fi
    if [[ -x $profile_dir/interfaces/$interface ]]; then
        source "$profile_dir/interfaces/$interface"
    fi
    if [[ $RFKill ]]; then
        enable_rf "$interface" "$RFKill" || exit 1
    fi

    if ! wpa_conf=$(wpa_make_config_file "$interface"); then
        report error "Could not create the configuration file for interface $INTERFACE"
    fi
    list_files "$profile_dir" | while read -r profile; do
        report debug "Examining profile $profile"
        (
          source "$profile_dir/$profile"
          [[ $Interface == "$interface" ]] || continue
          is_yes "${ExcludeAuto:-no}" && exit 1
          [[ $Connection != "wireless" ]] && exit 1
          : ${Security:=none}
          # Exclude wpa-config, the wpa_conf is 'complete' and does not fit in this scheme
          [[ $Security == "wpa-config" ]] && exit 1

          printf "%s\n" "network={" "$(wpa_make_config_block)" "id_str=\"$profile\"" "}" >> "$wpa_conf"
          report notice "Included profile $profile"
        )
    done

    # Start the WPA supplicant
    WPADriver=nl80211,wext
    if wpa_start "$interface" "$WPADriver" "$wpa_conf"; then
        wpa_actiond "${actiond_args[@]}" && exit
        wpa_stop "$interface"
    fi
    exit 1
  ;;
  stop)
    kill "$(< $pidfile)"
    if [[ -x $profile_dir/interfaces/$interface ]]; then
        source "$profile_dir/interfaces/$interface"
    fi
    # TODO: rework timeout_wait.
    timeout_wait 1 '! wpa_is_active "$interface"' || wpa_stop "$interface"
    ip link set dev "$interface" down
    [[ $RFKill ]] && disable_rf "$interface" "$RFKill"
    exit
  ;;
esac


# vim: ft=sh ts=4 et sw=4:
