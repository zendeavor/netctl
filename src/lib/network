#! /bin/bash

. /usr/lib/network/globals


## Check if a string represents a network interface
# $1: potential interface name
is_interface() {
    # Strip any old school alias specifier
    [[ -d /sys/class/net/${1%%:?*} ]]
}

## Check if an interface is up
# $1: interface name
interface_is_up() {
    local flags
    read flags < "/sys/class/net/${1%%:?*}/flags"
    # IFF_UP is defined as 0x1 in linux/if.h
    (( flags & 0x1 ))
}

## Activate an interface
# $1: interface name
bring_interface_up() {
    local interface=$1
    ip link set dev "$interface" up &>/dev/null
    timeout_wait "${TimeoutUp:-5}" "interface_is_up $interface"
}

## Deactivate an interface
# $1: interface name
bring_interface_down() {
    local interface=$1
    ip link set dev "$interface" down &>/dev/null
    # We reuse the up timeout (down is normally faster)
    timeout_wait "${TimeoutUp:-5}" ! interface_is_up "$interface"
}


if [[ $# -ne 2 || $1 != @(start|stop) ]]; then
    report error "Usage: $0 {start|stop} <profile>"
fi
ensure_root netctl
# Ensure we are not in a transient directory
cd /

# Expose the profile name
Profile=$2
load_profile "$Profile"
case $1 in
  start)
    report notice "Starting network profile $Profile ..."
    if [[ is_interface $Interface && interface_is_up $Interface && \
        ! is_yes ${ForceConnect:-no} ]]; then
        report error "The interface of network profile $Profile is already up"
        exit 1
    fi
    if ! [[ ${Connection}_up ]]; then
        report error "Failed to bring the network up for profile $Profile"
        exit 1
    fi
    if "${ExecUpPost[@]}" &>/dev/null; then
        report error "ExecUpPost failed for network profile $Profile"
        # Failing ExecUpPost will take the connection down
        "${Connection}_down"
        exit 1
    fi
    report notice "Started network profile $Profile"
  ;;
  stop)
    report notice "Stopping network profile $Profile ..."
    if ! "${ExecDownPre[@]}" &>/dev/null; then
        report error "ExecDownPre failed for network profile $Profile"
        # Failing ExecDownPre will leave the profile active
        exit 1
    fi
    if ! [[ ${Connection}_down ]]; then
        report error "Failed to bring the network down for profile $Profile"
        exit 1
    fi
    if [[ is_interface $Interface && interface_is_up $Interface && ! is_yes ${ForceConnect:-no} ]]; then
        report error "The interface of network profile $Profile did not go down"
        exit 1
    fi
    report notice "Stopped network profile $Profile"
  ;;
esac


# vim: ft=sh ts=4 et sw=4:
