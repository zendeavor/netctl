#!/bin/bash
# vim detects this as a privoxy config file or something
# vim: ft=sh
# ifplugd.action script for netctl

. /usr/lib/network/globals

profile_file=$state_dir/ifplugd_$1.profile

case "$2" in
  up)
    # Look for a dhcp based profile to try first
    # dhcp can actually outright fail, whereas
    # it's difficult to tell if static succeeded
    # Also check profile is same iface and is right connection
    printf "%s" "up"
    declare -a preferred_profiles
    declare -a dhcp_profiles
    declare -a static_profiles
    while read -r profile; do
      (
      printf "%s\n" "Reading profile $profile"
      source "$profile_dir/$profile"
      [[ $Interface == $1 && $Connection == ethernet ]] || continue
      is_yes "${AutoWired:-no}" && exit 1 # user preferred AUTO profile
      [[ $IP == dhcp ]] && exit 2 # dhcp profile
      exit 3 # static profile
      )
      case "$?" in
        1) preferred_profiles+=("$profile")
          ;;
        2) dhcp_profiles+=("$profile")
          ;;
        3) static_profiles+=("$profile");;
      esac
    done < <(list_files "$profile_dir")
    ! [[ ${#preferred_profiles[@]} > 1 ]] ||\
      printf "%s\n" "AutoWired flag for $1 set in more than one profile (${preferred_profiles[@]})"
    for profile in "${preferred_profiles[@]}" "${dhcp_profiles[@]}" "${static_profiles[@]}"; do
      if ForceConnect="yes" "$subr_dir/network" start "$profile"; then
        mkdir -p "${profile_file%/*}"
        printf "%s\n" "$profile" > "$profile_file"
        exit 0
      fi
    done
    ;;
  down)
    if [[ -e $profile_file ]]; then
      if ForceConnect=yes "$subr_dir/network" stop "$(< $profile_file)"; then
        rm -f "$profile_file"
        exit 0
      fi
    fi
    ;;
  *)
    printf "%s" "Wrong arguments" >&2
    ;;
esac

exit 1


# vim: ft=sh ts=4 et sw=4:
